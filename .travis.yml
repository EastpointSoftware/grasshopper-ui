language: node_js
node_js:
  - "0.10.33"

branches:
  only:
    - master

env:
  global:
    - secure: "Eu6CBADoUI7CBpD5WEKZX5wYttNOTozHtH/JDzukkvTsYqayTN7HGvHHCfO6MfXLD1hbcYqJBE20Tj3WRkFlOJVaDNZG41f5vLY4Su9rErCrQzJcegxmU6SOyS1/0QvhT+OUFTVqJzjs4MltITzu0pjXiJnpoIIVxtewJppbBk0="
    - secure: "UN5B6JIem98315QSn2t5GU5uyk3RjD1z+1jdEqX0AyIU7j5vhvtHeaA6rqCQwiVBd8oeUe4TIxrZsjwG47ZmTmoJyeoacWJfs4gv8qvmGmD1HACS3TFODsJoyR5/8yyMmg3eBvGqhRer55NourZDpW1M4x8cltvAWwiX3osgMYw="

addons:
  postgresql: "9.3"

before_install:
  # Create virtual hosts
  - sudo sed -i "2i127.0.0.2  2013.timetable.cam.ac.uk" /etc/hosts
  - sudo sed -i "2i127.0.0.2  2014.timetable.cam.ac.uk" /etc/hosts
  - sudo sed -i "2i127.0.0.1  admin.grasshopper.local" /etc/hosts
  - cat /etc/hosts

  # Install test dependencies
  - npm install -g casperjs

  # Show the CasperJS and PhantomJS version for debugging purposes
  - casperjs --version
  - phantomjs --version

  # Prepare the machine
  - sudo apt-get update
  - sudo apt-get install build-essential
  - cd /usr/local/lib

  # Get Apache HTTP-server 2.4
  - sudo wget http://archive.apache.org/dist/httpd/httpd-2.4.10.tar.gz -q
  - sudo tar xfz httpd-2.4.10.tar.gz
  - cd httpd-2.4.10/srclib/

  # Download dependencies
  - sudo wget https://archive.apache.org/dist/apr/apr-1.5.1.tar.gz -q
  - sudo wget https://archive.apache.org/dist/apr/apr-util-1.5.3.tar.gz -q
  - sudo wget http://lib.gblearn.com/apache/pcre/pcre-8.34.tar.gz -q

  # Install and configure APR
  - echo 'Installing APR'
  - sudo tar xfz ./apr-1.5.1.tar.gz
  - cd apr-1.5.1
  - sudo ./configure
  - sudo make --silent
  - sudo make install --silent
  - cd ../

  # Install and configure APR util
  - echo 'Installing APR util'
  - sudo tar xfz ./apr-util-1.5.3.tar.gz
  - cd apr-util-1.5.3
  - sudo ./configure --with-apr=/usr/local/apr/bin/apr-1-config
  - sudo make --silent
  - sudo make install --silent
  - cd ../

    # Install and configure PCRE
  - echo 'Installing PCRE'
  - sudo tar xfz pcre-8.34.tar.gz
  - cd pcre-8.34
  - sudo ./configure --prefix=/usr/local/pcre
  - sudo make --silent
  - sudo make install --silent
  - cd ../..

  # Install and configure Apache HTTPD 2.4
  - echo 'Installing Apache'
  - sudo ./configure --prefix=/usr/local/apache2 --with-pcre=/usr/local/pcre --enable-so
  - sudo make --silent
  - sudo make install --silent
  - cd /usr/local/apache2/conf
  - sudo mkdir sites-enabled

  # Install Grasshopper
  - echo 'Installing Grasshopper'
  - cd ~/build/CUL-DigitalServices
  - git clone --branch master --depth=1 git://github.com/CUL-DigitalServices/grasshopper.git ./grasshopper
  - cd ./grasshopper
  - npm install

  # Configure postgres
  - echo 'Creating database'
  - psql -c 'CREATE DATABASE grasshoppertest;' -U postgres
  - psql grasshoppertest -c 'CREATE EXTENSION pg_trgm;' -U postgres
  - echo "config.db.username = 'postgres';" >> config.js

  # Install Grasshopper UI
  - echo 'Installing Grasshopper UI'
  - cd ~/build/CUL-DigitalServices/grasshopper-ui
  - npm install
  - grunt configApache
  - sudo cp ./target/optimized/apache/httpd.conf /usr/local/apache2/conf/httpd.conf
  - sudo cp -R ./target/optimized/apache/app_*.conf /usr/local/apache2/conf/sites-enabled

  # Start Apache
  - sudo /usr/local/apache2/bin/apachectl start
  - sleep 5

script:
  - grunt test

after_success:
  # Run a release build
  - grunt
  # Package and upload to Amazon S3
  - ./etc/scripts/travis-upload.sh

after_script:
  - grunt coveralls

notifications:
  email:
    - bp323@cam.ac.uk
    - md623@cam.ac.uk
    - rwlc3@cam.ac.uk
  irc:
    channels:
      - "irc.freenode.org#ucam-ds"
    skip_join: true
